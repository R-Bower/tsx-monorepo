[
  {
    "id": "components",
    "subgroups": [
      {
        "id": "primitives",
        "elements": [
          {
            "group": "components",
            "id": "box",
            "mdxBody": "The Box component serves as a wrapper component for most layout related needs. Use Box to set values such as `display`, `width`, `height`, and more. See the LAYOUT section of our [System Props](/system-props) documentation for the full list of available props. In practice, this component is used frequently as a wrapper around other components to achieve Box Model related styling.\n\n## Default example\n\n```jsx live\n<Box color={\"text.primary\"} bg={\"bg.successInverse\"}>\n  Box can be used to create both{' '}\n  <Box as=\"span\" color=\"text.secondary\">\n    inline\n  </Box>{' '}\n  and\n  <Box color={\"text.secondary\"} bg=\"bg.dangerInverse\">\n    block-level elements,\n  </Box>\n  <Box\n    border={\"solid 1px\"}\n    borderColor={\"border.default\"}\n    color={\"text.secondary\"}\n    bg={\"bg.infoInverse\"}\n    p={4}\n    mt={2}\n  >\n    and more!\n  </Box>\n</Box>\n```\n\n## System props\n\nBox components get the `COMMON` category of system props. Read our [System Props](/system-props) doc page for a full list of available props.\n\n## Component props\n\n| Prop name | Type   | Default | Description                         |\n| :-------- | :----- | :-----: | :---------------------------------- |\n| as        | String |  `div`  | sets the HTML tag for the component |\n",
            "mdxFileName": "Box.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/box/Box.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/box"
          },
          {
            "group": "components",
            "id": "element",
            "mdxBody": "# Element\n\nThis is the Element primitive.\n",
            "mdxFileName": "Element.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/element/Element.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/element"
          },
          {
            "group": "components",
            "id": "elevation",
            "mdxBody": "# Elevation\n\nThis is the Elevation primitive.\n",
            "mdxFileName": "Elevation.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/elevation/Elevation.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/elevation"
          },
          {
            "group": "components",
            "id": "flex",
            "mdxBody": "# Flex\n\nThis is the Flex primitive.\n",
            "mdxFileName": "Flex.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/flex/Flex.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/flex"
          },
          {
            "group": "components",
            "id": "grid",
            "mdxBody": "# Grid\n\nThis is the Grid primitive.\n",
            "mdxFileName": "Grid.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/grid/Grid.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/grid"
          },
          {
            "group": "components",
            "id": "input",
            "mdxBody": "# Input\n\nThis is the Input primitive.\n",
            "mdxFileName": "Input.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/input/Input.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/input"
          },
          {
            "group": "components",
            "id": "position",
            "mdxBody": "# Position\n\nThis is the Position primitive.\n",
            "mdxFileName": "Position.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/position/Position.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/position"
          },
          {
            "group": "components",
            "id": "text",
            "mdxBody": "# Text\n\nThis is the Text primitive.\n",
            "mdxFileName": "Text.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/text/Text.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/text"
          }
        ]
      },
      {
        "id": "data-display",
        "elements": [
          {
            "group": "components",
            "id": "breadcrumbs",
            "mdxBody": "Breadcrumbs are used to show taxonomical context on pages that are many levels deep in a siteâ€™s hierarchy. Breadcrumbs show and link to parent, grandparent, and sometimes great-grandparent pages. Breadcrumbs are most appropriate on pages that:\n\n- Are many levels deep on a site\n- Do not have a section-level navigation\n- May need the ability to quickly go back to the previous (parent) page\n\nTo use Breadcrumb with [react-router](https://github.com/ReactTraining/react-router) or\n[react-router-dom](https://www.npmjs.com/package/react-router-dom), pass\n`as={NavLink}` and omit the `selected` prop.\nThis ensures that the NavLink gets `activeClassName='selected'`\n\n## Default example\n\n```jsx\n<Breadcrumb>\n  <Breadcrumb.Item href=\"#business\">Business</Breadcrumb.Item>\n  <Breadcrumb.Item href=\"#customers\">Customers</Breadcrumb.Item>\n  <Breadcrumb.Item href=\"#mailchimp\" selected>\n    MailChimp\n  </Breadcrumb.Item>\n</Breadcrumb>\n```\n\n## System props\n\nBreadcrumb and Breadcrumb.Item components get `COMMON` system props. Read our [System Props](/system-props) doc page for a full list of available props.\n\n## Component props\n\n### Breadcrumb\n\nThe `Breadcrumb` component does not receive any additional props besides `COMMON` system props.\n\n### Breadcrumb.Item\n\n| Prop name | Type | Default | Description |\n| :- | :- | :-: | :- |\n| as        | String  | `a` | Sets the HTML tag for the component              |\n| href      | String  | | URL to be used for the Link                      |\n| selected  | Boolean | false | Used to style the link as selected or unselected |\n",
            "mdxFileName": "Breadcrumbs.mdx",
            "mdxFilePath": "packages/libs/react-components/src/data-display/breadcrumbs/Breadcrumbs.mdx",
            "subgroup": "data-display",
            "url": "/doc/components/data-display/breadcrumbs"
          },
          {
            "group": "components",
            "id": "truncated-text",
            "mdxBody": "# TruncatedText\n\n<State initialState={{maxLines: 2}}>\n\n  <Observe>\n    {({maxLines, setState}) => (\n      <button onClick={() => setState(s => ({maxLines: s.maxLines + 1}))}>\n        Click to increment: {maxLines}\n      </button>\n    )}\n  </Observe>\n\n  <Observe>\n    {({maxLines}) =>\n      <Box px={2} py={1} border={\"solid 2px\"} borderColor={\"border.default\"} width={200}>\n        <TruncatedText as={\"p\"} maxLines={maxLines}>\n          Click the button to expand this section.  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n        </TruncatedText>\n      </Box>\n    }\n  </Observe>\n\n</State>\n",
            "mdxFileName": "TruncatedText.mdx",
            "mdxFilePath": "packages/libs/react-components/src/data-display/truncated-text/TruncatedText.mdx",
            "subgroup": "data-display",
            "url": "/doc/components/data-display/truncated-text"
          }
        ]
      },
      {
        "id": "layout",
        "elements": [
          {
            "group": "components",
            "id": "list",
            "mdxBody": "# List\n\n:)\n",
            "mdxFileName": "List.mdx",
            "mdxFilePath": "packages/libs/react-components/src/data-display/list/List.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/list"
          },
          {
            "group": "components",
            "id": "card",
            "mdxBody": "# Card\n\nThis is a card component\n",
            "mdxFileName": "Card.mdx",
            "mdxFilePath": "packages/libs/react-components/src/layout/card/Card.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/card"
          },
          {
            "group": "components",
            "id": "separator",
            "mdxBody": "# Separator\n\nThis is a separator component.\n",
            "mdxFileName": "Separator.mdx",
            "mdxFilePath": "packages/libs/react-components/src/layout/separator/Separator.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/separator"
          }
        ]
      }
    ]
  },
  {
    "id": "hooks",
    "subgroups": [
      {
        "id": "data",
        "elements": [
          {
            "group": "hooks",
            "id": "use-debounce",
            "mdxBody": "# useDebounce\n\nTODO: add examples.\n",
            "mdxFileName": "useDebounce.mdx",
            "mdxFilePath": "packages/libs/react-hooks/src/data/useDebounce.mdx",
            "subgroup": "data",
            "url": "/doc/hooks/data/use-debounce"
          }
        ]
      },
      {
        "id": "interactions",
        "elements": [
          {
            "group": "hooks",
            "id": "use-persistent-scroll",
            "mdxBody": "# usePersistentScroll\n\nTODO: add examples\n",
            "mdxFileName": "usePersistentScroll.mdx",
            "mdxFilePath": "packages/libs/react-hooks/src/interactions/usePersistentScroll.mdx",
            "subgroup": "interactions",
            "url": "/doc/hooks/interactions/use-persistent-scroll"
          }
        ]
      }
    ]
  }
]