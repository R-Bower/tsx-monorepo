[
  {
    "id": "components",
    "subgroups": [
      {
        "id": "primitives",
        "elements": [
          {
            "group": "components",
            "id": "box",
            "mdxBody": "# Box\n\nThe Box component serves as a wrapper component for most layout related needs. Use Box to set values such as `display`, `width`, `height`, and more. See the LAYOUT section of our [System Props](/system-props) documentation for the full list of available props. In practice, this component is used frequently as a wrapper around other components to achieve Box Model related styling.\n\n```jsx live\n<Box\n  bg={\"bg.successInverse\"}\n  border={\"solid 1px\"}\n  borderColor={\"border.primary\"}\n>\n  Box can be used to create both{\" \"}\n  <Box as={\"span\"} bg={\"bg.warningInverse\"}>\n    inline\n  </Box>{\" \"}\n  and\n  <Box bg={\"bg.dangerInverse\"}>\n    block-level elements,\n  </Box>\n  <Box\n    bg={\"bg.infoInverse\"}\n    p={4}\n    mt={2}\n  >\n    and more!\n  </Box>\n</Box>\n```\n\n## Component props\n\n| Prop name | Type   | Default | Description                         |\n| :-------- | :----- | :-----: | :---------------------------------- |\n| as        | String |  `div`  | sets the HTML tag for the component |\n\n## System props\n\nBox components get the `COMMON` category of system props which are listed in the table below.\n\n<StylePropsSearch propGroups={[\"border\", \"color\", \"display\", \"sizing\", \"space\"]} />\n",
            "mdxFileName": "Box.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/box/Box.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/box"
          },
          {
            "group": "components",
            "id": "element",
            "mdxBody": "# Element\n\nTODO: implement.\n\n<StylePropsSearch propGroups={[\"space\"]} />\n",
            "mdxFileName": "Element.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/element/Element.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/element"
          },
          {
            "group": "components",
            "id": "elevation",
            "mdxBody": "# Elevation\n\nThe `Elevation` component behaves the same as the [Box](/doc/components/primitives/box) component except that it has access to the `SHADOW` system props.\n\n<StylePropsSearch propGroups={[\"shadow\", \"color\", \"display\", \"sizing\", \"space\", \"border\"]} />\n\n",
            "mdxFileName": "Elevation.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/elevation/Elevation.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/elevation"
          },
          {
            "group": "components",
            "id": "flex",
            "mdxBody": "# Flex\n\nThe `Flex` component behaves the same as the [Box](/doc/components/primitives/box) component except that it has `display: flex` set by default.\n\n```jsx live\n<Flex\n  border={\"solid 1px\"}\n  borderColor={\"border.primary\"}\n  borderRadius={2}\n  height={300}\n  width={1}\n>\n  <Flex flexWrap={\"nowrap\"}>\n    <Flex bg={\"bg.infoInverse\"} color={\"text.inverse\"} p={3}>\n      Item 1\n    </Flex>\n    <Box bg={\"bg.warningInverse\"} color={\"text.inverse\"} p={3}>\n      Item 2\n    </Box>\n    <Box bg={\"bg.dangerInverse\"} color={\"text.inverse\"} p={3}>\n      Item 3\n    </Box>\n  </Flex>\n</Flex>\n```\n\n## Component props\n\n| Prop name | Type   | Default | Description                         |\n| :-------- | :----- | :-----: | :---------------------------------- |\n| as        | String |  `div`  | sets the HTML tag for the component |\n\n## System props\n\nBox components get the `COMMON` and `FLEX` category of system props which are listed in the table below.\n\n<StylePropsSearch propGroups={[\"flex\", \"border\", \"color\", \"display\", \"sizing\", \"space\"]} />\n",
            "mdxFileName": "Flex.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/flex/Flex.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/flex"
          },
          {
            "group": "components",
            "id": "grid",
            "mdxBody": "# Grid\n\nTODO: implement.\n",
            "mdxFileName": "Grid.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/grid/Grid.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/grid"
          },
          {
            "group": "components",
            "id": "input",
            "mdxBody": "# Input\n\nTODO: implement.\n",
            "mdxFileName": "Input.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/input/Input.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/input"
          },
          {
            "group": "components",
            "id": "position",
            "mdxBody": "# Position\n\nTODO: implement.\n",
            "mdxFileName": "Position.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/position/Position.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/position"
          },
          {
            "group": "components",
            "id": "text",
            "mdxBody": "# Text\n\nTODO: implement.\n",
            "mdxFileName": "Text.mdx",
            "mdxFilePath": "packages/libs/react-components/src/primitives/text/Text.mdx",
            "subgroup": "primitives",
            "url": "/doc/components/primitives/text"
          }
        ]
      },
      {
        "id": "data-display",
        "elements": [
          {
            "group": "components",
            "id": "truncated-text",
            "mdxBody": "# TruncatedText\nTODO: finish.\n\n<State initialState={{maxLines: 2}}>\n\n  <Observe>\n    {({maxLines, setState}) => (\n      <button onClick={() => setState(s => ({maxLines: s.maxLines + 1}))}>\n        Click to increment: {maxLines}\n      </button>\n    )}\n  </Observe>\n\n  <Observe>\n    {({maxLines}) =>\n      <Box px={2} py={1} border={\"solid 2px\"} borderColor={\"border.default\"} width={200}>\n        <TruncatedText as={\"p\"} maxLines={maxLines}>\n          Click the button to expand this section.  Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?\n        </TruncatedText>\n      </Box>\n    }\n  </Observe>\n\n</State>\n",
            "mdxFileName": "TruncatedText.mdx",
            "mdxFilePath": "packages/libs/react-components/src/data-display/truncated-text/TruncatedText.mdx",
            "subgroup": "data-display",
            "url": "/doc/components/data-display/truncated-text"
          }
        ]
      },
      {
        "id": "layout",
        "elements": [
          {
            "group": "components",
            "id": "list",
            "mdxBody": "# List\n\nTODO: implement.\n",
            "mdxFileName": "List.mdx",
            "mdxFilePath": "packages/libs/react-components/src/data-display/list/List.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/list"
          },
          {
            "group": "components",
            "id": "card",
            "mdxBody": "# Card\n\nTODO: implement.\n",
            "mdxFileName": "Card.mdx",
            "mdxFilePath": "packages/libs/react-components/src/layout/card/Card.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/card"
          },
          {
            "group": "components",
            "id": "separator",
            "mdxBody": "# Separator\n\nTODO: implement.\n",
            "mdxFileName": "Separator.mdx",
            "mdxFilePath": "packages/libs/react-components/src/layout/separator/Separator.mdx",
            "subgroup": "layout",
            "url": "/doc/components/layout/separator"
          }
        ]
      }
    ]
  },
  {
    "id": "hooks",
    "subgroups": [
      {
        "id": "data",
        "elements": [
          {
            "group": "hooks",
            "id": "use-debounce",
            "mdxBody": "# useDebounce\n\nTODO: add examples.\n",
            "mdxFileName": "useDebounce.mdx",
            "mdxFilePath": "packages/libs/react-hooks/src/data/useDebounce.mdx",
            "subgroup": "data",
            "url": "/doc/hooks/data/use-debounce"
          }
        ]
      },
      {
        "id": "interactions",
        "elements": [
          {
            "group": "hooks",
            "id": "use-persistent-scroll",
            "mdxBody": "# usePersistentScroll\n\nTODO: add examples\n",
            "mdxFileName": "usePersistentScroll.mdx",
            "mdxFilePath": "packages/libs/react-hooks/src/interactions/usePersistentScroll.mdx",
            "subgroup": "interactions",
            "url": "/doc/hooks/interactions/use-persistent-scroll"
          }
        ]
      }
    ]
  }
]